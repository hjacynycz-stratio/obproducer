/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.stratio.barclays.obproducer.infrastructure.rest.spring.spec;


import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-09T21:42:59.755+02:00")

@Api(value = "obdata", description = "the obdata API")
public interface ObdataApi {

    @ApiOperation(value = "Generate OB data", notes = "", response = Void.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Notification is successfully sent", response = Void.class),
        @ApiResponse(code = 400, message = "Bad request. Possible errors :-  - ERR_DEVICE_ID_IS_REQUIRED | Device id is required for sending notification through the PUSH channel", response = Void.class),
        @ApiResponse(code = 404, message = "Not found. Possible errors :-   - ERR_USER_NOT_FOUND | When user does not exists in the users-core database   - ERR_DEVICE_NOT_FOUND | When device deoes not exists in the users-devices database", response = Void.class),
        @ApiResponse(code = 500, message = "Internal server error", response = Void.class) })
    
    @RequestMapping(value = "/obdata",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> obdataPost() {
        // do some magic!
        return new ResponseEntity<Void>(HttpStatus.OK);
    }

}
